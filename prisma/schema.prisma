// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Dataset {
  id         Int                @id @default(autoincrement())
  name       String
  routes     DatasetRoute[]
  buses      DatasetBus[]
  results    DatasetResult[]    @relation(name: "dataset_results")
  executions DatasetExecution[] @relation(name: "dataset_executions")
  created_at DateTime           @default(now())

  @@map("datasets")
}

model DatasetExecution {
  id         Int           @id @default(autoincrement())
  dataset    Dataset       @relation(name: "dataset_executions", fields: [dataset_id], references: [id], onDelete: Cascade)
  dataset_id Int
  result     DatasetResult @relation(name: "execution_result", fields: [result_id], references: [id])
  result_id  Int           @unique
  name       String
  created_at DateTime      @default(now())

  @@map("dataset_executions")
}

model DatasetRoute {
  id           Int                 @id @default(autoincrement())
  dataset      Dataset             @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
  dataset_id   Int
  name         String
  length       Float
  demand       Int
  cycle_time   Float
  result_items DatasetResultItem[] @relation(name: "route_result_items")
  created_at   DateTime            @default(now())

  @@map("dataset_routes")
}

model DatasetBus {
  id           Int                  @id @default(autoincrement())
  dataset      Dataset              @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
  dataset_id   Int
  name         String
  cost_per_km  Float                @default(0)
  capacities   DatasetBusCapacity[]
  result_items DatasetResultItem[]  @relation(name: "bus_result_items")
  created_at   DateTime             @default(now())

  @@map("dataset_buses")
}

model DatasetBusCapacity {
  id           Int                 @id @default(autoincrement())
  bus          DatasetBus          @relation(fields: [bus_id], references: [id], onDelete: Cascade)
  bus_id       Int
  name         String
  capacity     Int                 @default(0)
  available    Int                 @default(0)
  result_items DatasetResultItem[] @relation(name: "bus_capacity_result_items")
  created_at   DateTime            @default(now())

  @@map("dataset_bus_capacities")
}

model DatasetResult {
  id           Int                 @id @default(autoincrement())
  dataset      Dataset             @relation(name: "dataset_results", fields: [dataset_id], references: [id], onDelete: Cascade)
  dataset_id   Int
  execution    DatasetExecution?   @relation(name: "execution_result")
  result_items DatasetResultItem[]
  status       String
  objective    Float               @default(0)
  time         Float               @default(0)
  created_at   DateTime            @default(now())

  @@map("dataset_results")
}

model DatasetResultItem {
  id              Int                @id @default(autoincrement())
  result          DatasetResult      @relation(fields: [result_id], references: [id], onDelete: Cascade)
  result_id       Int
  bus             DatasetBus         @relation(name: "bus_result_items", fields: [bus_id], references: [id], onDelete: Cascade)
  bus_id          Int
  route           DatasetRoute       @relation(name: "route_result_items", fields: [route_id], references: [id], onDelete: Cascade)
  route_id        Int
  capacity        DatasetBusCapacity @relation(name: "bus_capacity_result_items", fields: [bus_capacity_id], references: [id], onDelete: Cascade)
  bus_capacity_id Int
  value           String             @default("0")
  created_at      DateTime           @default(now())

  @@map("dataset_result_items")
}

model Forecast {
  id         Int                 @id @default(autoincrement())
  name       String
  items      ForecastItem[]
  results    ForecastResult[]    @relation(name: "forecast_results")
  executions ForecastExecution[] @relation(name: "forecast_executions")
  created_at DateTime            @default(now())

  @@map("forecasts")
}

model ForecastItem {
  id          Int      @id @default(autoincrement())
  forecast    Forecast @relation(fields: [forecast_id], references: [id], onDelete: Cascade)
  forecast_id Int
  name        String   @default("Forecast Item")
  value       Float    @default(0)
  created_at  DateTime @default(now())

  @@map("forecast_items")
}

model ForecastExecution {
  id          Int            @id @default(autoincrement())
  forecast    Forecast       @relation(name: "forecast_executions", fields: [forecast_id], references: [id], onDelete: Cascade)
  forecast_id Int
  result      ForecastResult @relation(name: "forecast_execution_result", fields: [result_id], references: [id])
  result_id   Int            @unique
  name        String
  created_at  DateTime       @default(now())

  @@map("forecast_executions")
}

model ForecastResult {
  id           Int                  @id @default(autoincrement())
  forecast     Forecast             @relation(name: "forecast_results", fields: [forecast_id], references: [id], onDelete: Cascade)
  forecast_id  Int
  time         Float                @default(0)
  execution    ForecastExecution?   @relation(name: "forecast_execution_result")
  result_items ForecastResultItem[]
  created_at   DateTime             @default(now())

  @@map("forecast_results")
}

model ForecastResultItem {
  id                 Int            @id @default(autoincrement())
  result             ForecastResult @relation(fields: [result_id], references: [id], onDelete: Cascade)
  result_id          Int
  selected           Boolean        @default(false)
  method             String
  value              Float          @default(0)
  mean_squared_error Float          @default(0)
  created_at         DateTime       @default(now())

  @@map("forecast_result_items")
}

// De los cuales el % de las citaciones realizadas por los autores, corresponden a X, Y,Z e ir concluyendo
